#
#
#

ARG DISTRIBUTION=ubuntu
ARG CODENAME=bionic

FROM $DISTRIBUTION:$CODENAME

ARG DISTRIBUTION
ARG CODENAME

MAINTAINER Rodrigo Cabral <rodrixcornell@gmail.com.br>

ENV DEBIAN_FRONTEND noninteractive
ENV LANG pt_BR.utf8
ENV LANGUAGE pt_BR:pt:en
ENV PHP_VERSION 7.2
ENV TIMEZONE America/Manaus

RUN set -xe && echo $TIMEZONE | tee /etc/timezone \
\
&& apt-get update && apt-get install -y --no-install-recommends locales gnupg2 curl ca-certificates && apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/* \
&& localedef -i pt_BR -c -f UTF-8 -A /usr/share/locale/locale.alias pt_BR.UTF-8 \
&& locale-gen pt_BR.UTF-8 && update-locale LANG=pt_BR.UTF-8 LANGUAGE=pt_BR: \
&& { \
echo "deb http://ppa.launchpad.net/ondrej/php/$DISTRIBUTION $CODENAME main"; \
echo "deb-src http://ppa.launchpad.net/ondrej/php/$DISTRIBUTION $CODENAME main"; \
} | tee /etc/apt/sources.list.d/ondrej-php.list \
&& apt-key adv --fetch-keys "http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x4F4EA0AAE5267A6C"

RUN ["/bin/bash", "-c", "set -xe && apt-get update -y && apt-get install -y --no-install-recommends php$PHP_VERSION-{bcmath,curl,fpm,gd,json,mbstring,mysql,sqlite*,xml,zip} \
&& cd /usr/sbin && ln -sfv php-fpm$PHP_VERSION php-fpm \
&& apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*"]

ENV ORACLE_INSTANTCLIENT 11.2
ENV ORACLE_BASE /usr/lib/oracle
ENV ORACLE_HOME $ORACLE_BASE/$ORACLE_INSTANTCLIENT/client64
ENV NLS_CHARACTERSET UTF8
ENV NLS_COMP BINARY
ENV NLS_CURRENCY R$
ENV NLS_DATE_FORMAT RRRR-MM-DD HH24:MI:SS
ENV NLS_LANG BRAZILIAN PORTUGUESE_BRAZIL.UTF8
ENV NLS_LANGUAGE BRAZILIAN PORTUGUESE
ENV NLS_NCHAR_CHARACTERSET AL32UTF8
ENV NLS_NUMERIC_CHARACTERS .,
ENV NLS_SORT WEST_EUROPEAN_AI
ENV NLS_TERRITORY BRAZIL
ENV NLS_TIMESTAMP_FORMAT RRRR-MM-DD HH24:MI:SS.FF

COPY oracle-instantclient11.2-sqlplus-11.2.0.4.0-1.x86_64.rpm /tmp
COPY oracle-instantclient11.2-devel-11.2.0.4.0-1.x86_64.rpm /tmp
COPY oracle-instantclient11.2-basic-11.2.0.4.0-1.x86_64.rpm /tmp

RUN set -xe \
&& apt-get update -y && apt-get install -y --no-install-recommends alien make php$PHP_VERSION-dev \
\
&& alien --scripts --install /tmp/oracle*rpm && rm -rf /tmp/oracle*rpm && apt-get update && apt-get install -f -y --no-install-recommends libaio1 && apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/* \
&& export LD_LIBRARY_PATH=$ORACLE_HOME/lib \
&& export C_INCLUDE_PATH=/usr/include/oracle/$ORACLE_INSTANTCLIENT/client64 \
&& export PATH=$ORACLE_HOME/bin:$PATH && echo $PATH \
&& echo $LD_LIBRARY_PATH | tee /etc/ld.so.conf.d/oracle.conf && ldconfig \
\
&& cd /tmp && curl "https://codeload.github.com/php/php-src/tar.gz/php-$(php -v | grep -i cli | cut -c5-10 | sed "s/-//")" --output "php-src-php-$(php -v | grep -i cli | cut -c5-10 | sed "s/-//").tar.gz" && tar -xzvf php-src-php-$(php -v | grep -i cli | cut -c5-10 | sed "s/-//").tar.gz && cd php-src-php-$(php -v | grep -i cli | cut -c5-10 | sed "s/-//")/ext/oci8 \
\
&& phpize && ./configure --with-oci8=instantclient && make && make install && chmod -x /usr/lib/php/201*/* \
&& { \
echo "; configuration for php oracle module"; \
echo "; priority=20"; \
echo "extension=oci8.so"; \
} | tee /etc/php/$PHP_VERSION/mods-available/oci8.ini \
&& phpenmod -v $PHP_VERSION oci8 && php -i | grep -i oci \
\
&& cd ../pdo_oci \
#No arquivo oci_statement.c
#linha 508, onde tiver "col->maxlen = data_size;", trocar "col->maxlen = data_size * 3;"
#&& sed -i "s/data_size;/data_size * 3;/g" oci_statement.c \
&& phpize && ./configure -with-pdo-oci=instantclient,$LD_LIBRARY_PATH && make && make install && chmod -x /usr/lib/php/201*/* \
# && phpize && ./configure -with-pdo-oci=instantclient,$ORACLE_BASE,$ORACLE_INSTANTCLIENT && make && make install && chmod -x /usr/lib/php/201*/* \
&& { \
echo "; configuration for php oracle module"; \
echo "; priority=20"; \
echo "extension=pdo_oci.so"; \
} | tee /etc/php/$PHP_VERSION/mods-available/pdo_oci.ini \
&& phpenmod -v $PHP_VERSION pdo_oci && php -i | grep -i oci \
\
&& cd && rm -rf /tmp/php* \
\
&& apt-get purge -y alien gcc-7-base make php$PHP_VERSION-dev && apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*

RUN set -xe && apt-get update && apt-get upgrade -y --no-install-recommends && apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*

##<autogenerated>##
# Configurações do php-fpm
RUN set -ex \
&& cd /etc/php/$PHP_VERSION/fpm/ \
&& cp -rf php-fpm.conf php-fpm.conf.default \
&& cp -rf pool.d/www.conf pool.d/www.conf.default \
&& if [ -d php-fpm.d ]; then \
# for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
sed "s!=NONE/!=!g" php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
else \
# PHP 5.x doesn't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
mkdir php-fpm.d; \
cp php-fpm.conf.default php-fpm.d/www.conf; \
{ \
echo "[global]"; \
echo "include=/etc/php/$PHP_VERSION/fpm/php-fpm.d/*.conf"; \
} | tee php-fpm.conf; \
fi \
&& { \
echo "[global]"; \
echo "error_log = /proc/self/fd/2"; \
echo; \
echo "[www]"; \
echo "; if we send this to /proc/self/fd/1, it never appears"; \
echo "access.log = /proc/self/fd/2"; \
echo; \
echo "clear_env = no"; \
echo; \
echo "; Ensure worker stdout and stderr are sent to the main error log."; \
echo "catch_workers_output = yes"; \
} | tee php-fpm.d/docker.conf \
&& { \
echo "[global]"; \
echo "daemonize = no"; \
echo; \
echo "[www]"; \
echo "listen = 9000"; \
} | tee php-fpm.d/zz-docker.conf

# Usage: /etc/init.d/php-fpm$PHP_VERSION {start|stop|status|restart|reload|force-reload}
# RUN set -xe && /etc/init.d/php-fpm$PHP_VERSION start && /etc/init.d/php-fpm$PHP_VERSION status
RUN set -xe && /etc/init.d/php$PHP_VERSION-fpm start && /etc/init.d/php$PHP_VERSION-fpm status

EXPOSE 9000
#WORKDIR /var/www/html
WORKDIR /var/www
# VOLUME /var/www
# ENTRYPOINT ["/usr/sbin/php-fpm5.6"]
CMD ["php-fpm"]
##</autogenerated>##
